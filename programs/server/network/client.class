local client = newClass()

function client:constructor(address, protocol)
    assert(self, "Must be called on a object")
    assert(address, "No remote address given")
    assert(protocol, "No protocol given")

    self.address = address
    self.protocol = protocol
    self.sessionID = nil
end

-- Starts the initial handshake with this client
function client:handshake()
    if not self.sessionID then
        -- Start handshake sequence via the protocol
        local handshakeSeq = nil
        for id, seq in pairs(self.protocol.sequences) do
            if seq.name == "handshake" then
                handshakeSeq = id
                break
            end
        end
        if handshakeSeq then
            self.sessionID = self.protocol:startSession(handshakeSeq, self.address)
        else
            error("Handshake sequence not available in protocol " .. self.protocol.name)
        end
    end
end

return client

